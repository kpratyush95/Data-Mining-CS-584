# -*- coding: utf-8 -*-
"""Categorizing_continuous_variable.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1udYBHxXx1y4Ygj6Emzai8wD-FSW-auYb
"""

import pandas as pd
import numpy as np
from sklearn import  tree

dataset = pd.read_csv("./Train.csv")

# Scaling the dataset
def normalized(A):
    A = (A- np.min(A))/ (np.max(A) - np.min(A))
    return A

continuous_vaules_train = dataset[['F1', 'F2', 'F5','F6']]

normalized_dataset = normalized(continuous_vaules_train)

normalized_dataset

bin = [-0.1, 0.25, 0.50, 0.75, 1]

# Cutting/ classifying the data into bins
df_f1 = pd.cut(normalized_dataset['F1'], bins = bin)

df_f2 = pd.cut(normalized_dataset['F2'], bins = bin)

df_f5 = pd.cut(normalized_dataset['F5'], bins = bin)

df_f6 = pd.cut(normalized_dataset['F6'], bins = bin)

dummy_data_train =  pd.concat([df_f1, df_f2, df_f5, df_f6, dataset[['F10', 'F11']]], axis =1)

one_hot_train = pd.get_dummies(dummy_data_train)

X = pd.concat([dataset[['F3', 'F4','F7', 'F8','F9']], one_hot_train], axis =1)

y = dataset['credit']

classifier = tree.DecisionTreeClassifier(max_depth= 25, min_samples_split = 50)

classifier.fit(X,y)

test_dataset  = pd.read_csv("./Test.csv")

continuous_vaules_test = test_dataset[['F1', 'F2', 'F5','F6']]

normalized_test_dataset = normalized(continuous_vaules_test)

df_f1_test = pd.cut(normalized_test_dataset['F1'], bins = bin)

df_f2_test = pd.cut(normalized_test_dataset['F2'], bins = bin)

df_f5_test = pd.cut(normalized_test_dataset['F5'], bins = bin)
df_f6_test = pd.cut(normalized_test_dataset['F6'], bins = bin)

dummy_data_test =  pd.concat([df_f1_test, df_f2_test, df_f5_test, df_f6_test, test_dataset[['F10', 'F11']]], axis =1)

one_hot_test = pd.get_dummies(dummy_data_test)

X_test = pd.concat([test_dataset[['F3', 'F4','F7', 'F8','F9']], one_hot_test], axis =1)

y_pred =classifier.predict(X_test)

output=y_pred.reshape(y_pred.size,1)

a_file = open("output.txt", "w")
for row in output:
    # np.savetxt(a_file, row)
    a_file.write(str(row[0])+"\n")

a_file.close()

