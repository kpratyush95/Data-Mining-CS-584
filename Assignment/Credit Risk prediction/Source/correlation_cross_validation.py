# -*- coding: utf-8 -*-
"""Correlation_cross_validation

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Oe2z5gceIcF4Dv49e-OataUMDgkpFw6Q
"""

import pandas as pd
import numpy as np
from sklearn import  tree
import pydotplus
from IPython.display import Image
from sklearn.model_selection import KFold
from sklearn.metrics import classification_report, confusion_matrix, f1_score
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.metrics import confusion_matrix, plot_confusion_matrix

dataset = pd.read_csv("./Train.csv")

X = dataset.iloc[:,:-1]

#Calculating the correlation 
correlation = dataset.corr()

correlation

#Plotting the heat map.
plt.figure(figsize=(16, 10))
sns.heatmap(correlation, annot= True)
plt.show()

y = dataset.iloc[:, -1]

kf = KFold(n_splits=15, shuffle= True)

# declaring the classifier 
classifier = tree.DecisionTreeClassifier(max_depth= 20, min_samples_split = 45, class_weight = {0:0.2408 , 1:0.7591})
count =0
#Cross validaion
for train_index, test_index in kf.split(X):
  X_train, X_test = X[train_index[0]: train_index[-1]], X[test_index[0]:test_index[-1]]
  y_train, y_test = y[train_index[0]:train_index[-1]], y[test_index[0]:test_index[-1]]
  one_hot_train = pd.get_dummies(X_train[['F10', 'F11']])
  train_ = pd.concat([X_train['F1'],X_train['F2'],X_train['F3'], X_train['F4'],X_train['F5'],X_train['F6'] ,X_train['F7'], X_train['F8'], X_train['F9'], one_hot_train], axis =1)
  classifier.fit(train_, y_train)
  one_hot_test = pd.get_dummies(X_test[['F10', 'F11']])
  test_ = pd.concat([X_test['F1'],X_test['F2'],X_test['F3'], X_test['F4'], X_test['F5'], X_test['F6'] ,X_test['F7'], X_test['F8'], X_test['F9'], one_hot_test], axis =1)
  y_pred = classifier.predict(test_)
  # Calculating the F1-Score
  F1_score = f1_score(y_test, y_pred)
  print("Count:",count, "\n","F1-Score",F1_score)
  print(classifier.tree_.max_depth)
  # Plotting the confusion matrix
  plot_confusion_matrix(classifier, test_, y_test, cmap=plt.cm.Blues)
  count += 1
  print("======================================================================================================================")

